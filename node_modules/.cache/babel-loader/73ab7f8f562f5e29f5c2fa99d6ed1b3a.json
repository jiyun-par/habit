{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiyun\\\\Desktop\\\\GitHub\\\\reactPractice\\\\habit-tracker-function\\\\src\\\\app.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./app.css\";\nimport Habits from \"./components/habits\";\nimport Navbar from \"./components/navbar\";\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  let getHabitlist;\n  localStorage.getItem(\"habitlist\") ? getHabitlist = JSON.parse(localStorage.getItem(\"habitlist\")) : getHabitlist = [];\n  const [habits, setHabits] = useState(getHabitlist);\n  const handleIncrement = useCallback(habit => {\n    const habitList = habits.map(item => {\n      if (item.id === habit.id) {\n        return { ...habit,\n          count: habit.count + 1\n        };\n      }\n\n      return item;\n    });\n    setHabits(habits => habitList);\n    const list = JSON.stringify(habitList);\n    localStorage.setItem(\"habitlist\", list);\n  }, []);\n  const handleDecrement = useCallback(habit => {\n    setHabits(habits => habits.map(item => {\n      if (item.id === habit.id) {\n        return { ...habit,\n          count: habit.count > 0 ? habit.count - 1 : 0\n        };\n      }\n\n      return item;\n    }));\n  }, []);\n  const handleDelete = useCallback(habit => {\n    //id가 같지 않은 요소들로만 다시 배열을 만들어준다\n    setHabits(habits => habits.filter(item => item.id !== habit.id));\n  }, []);\n  const onAdd = useCallback(name => {\n    setHabits(habits => [...habits, {\n      id: Date.now(),\n      name,\n      count: 0\n    }]);\n    console.log(\"a\");\n    console.log(name);\n    const list = JSON.stringify(habits);\n    localStorage.setItem(\"habitlist\", list);\n  }, []);\n  const handleReset = useCallback(() => {\n    setHabits(habit => habits.map(habit => {\n      if (habit.count !== 0) {\n        return { ...habit,\n          count: 0\n        };\n      }\n\n      return habit;\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      totalCount: habits.filter(item => item.count > 0).length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Habits, {\n      habit: habits,\n      onIncrement: handleIncrement,\n      onDecrement: handleDecrement,\n      onDelete: handleDelete,\n      onAdd: onAdd,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"721BnRjiOesE6bM35wvU21BULqU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jiyun/Desktop/GitHub/reactPractice/habit-tracker-function/src/app.jsx"],"names":["Habits","Navbar","React","useState","useCallback","App","props","getHabitlist","localStorage","getItem","JSON","parse","habits","setHabits","handleIncrement","habit","habitList","map","item","id","count","list","stringify","setItem","handleDecrement","handleDelete","filter","onAdd","name","Date","now","console","log","handleReset","length"],"mappings":"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","sourcesContent":["import \"./app.css\";\r\nimport Habits from \"./components/habits\";\r\nimport Navbar from \"./components/navbar\";\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nconst App = (props) => {\r\n\tlet getHabitlist;\r\n\tlocalStorage.getItem(\"habitlist\")\r\n\t\t? (getHabitlist = JSON.parse(localStorage.getItem(\"habitlist\")))\r\n\t\t: (getHabitlist = []);\r\n\r\n\tconst [habits, setHabits] = useState(getHabitlist);\r\n\r\n\tconst handleIncrement = useCallback((habit) => {\r\n\t\tconst habitList = habits.map((item) => {\r\n\t\t\tif (item.id === habit.id) {\r\n\t\t\t\treturn { ...habit, count: habit.count + 1 };\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t});\r\n\t\tsetHabits((habits) => habitList);\r\n\t\tconst list = JSON.stringify(habitList);\r\n\t\tlocalStorage.setItem(\"habitlist\", list);\r\n\t}, []);\r\n\r\n\tconst handleDecrement = useCallback((habit) => {\r\n\t\tsetHabits((habits) =>\r\n\t\t\thabits.map((item) => {\r\n\t\t\t\tif (item.id === habit.id) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...habit,\r\n\t\t\t\t\t\tcount: habit.count > 0 ? habit.count - 1 : 0,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\tconst handleDelete = useCallback((habit) => {\r\n\t\t//id가 같지 않은 요소들로만 다시 배열을 만들어준다\r\n\t\tsetHabits((habits) => habits.filter((item) => item.id !== habit.id));\r\n\t}, []);\r\n\r\n\tconst onAdd = useCallback((name) => {\r\n\t\tsetHabits((habits) => [...habits, { id: Date.now(), name, count: 0 }]);\r\n\t\tconsole.log(\"a\");\r\n\t\tconsole.log(name);\r\n\t\tconst list = JSON.stringify(habits);\r\n\t\tlocalStorage.setItem(\"habitlist\", list);\r\n\t}, []);\r\n\r\n\tconst handleReset = useCallback(() => {\r\n\t\tsetHabits((habit) =>\r\n\t\t\thabits.map((habit) => {\r\n\t\t\t\tif (habit.count !== 0) {\r\n\t\t\t\t\treturn { ...habit, count: 0 };\r\n\t\t\t\t}\r\n\t\t\t\treturn habit;\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<React.StrictMode>\r\n\t\t\t<Navbar totalCount={habits.filter((item) => item.count > 0).length} />\r\n\t\t\t<Habits\r\n\t\t\t\thabit={habits}\r\n\t\t\t\tonIncrement={handleIncrement}\r\n\t\t\t\tonDecrement={handleDecrement}\r\n\t\t\t\tonDelete={handleDelete}\r\n\t\t\t\tonAdd={onAdd}\r\n\t\t\t\tonReset={handleReset}\r\n\t\t\t/>\r\n\t\t</React.StrictMode>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
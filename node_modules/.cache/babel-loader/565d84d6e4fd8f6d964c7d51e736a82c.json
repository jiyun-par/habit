{"ast":null,"code":"import _toConsumableArray from\"C:/Users/jiyun/Desktop/GitHub/reactPractice/habit-tracker-function/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/jiyun/Desktop/GitHub/reactPractice/habit-tracker-function/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/jiyun/Desktop/GitHub/reactPractice/habit-tracker-function/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./app.css\";import Habits from\"./components/habits\";import Navbar from\"./components/navbar\";import React,{useState,useCallback}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(props){var getHabitlist;localStorage.getItem(\"habitlist\")?getHabitlist=JSON.parse(localStorage.getItem(\"habitlist\")):getHabitlist=[];var _useState=useState(getHabitlist),_useState2=_slicedToArray(_useState,2),habits=_useState2[0],setHabits=_useState2[1];var setStorage=function setStorage(habitList){var list=JSON.stringify(habitList);localStorage.setItem(\"habitlist\",list);setHabits(function(habits){return habitList;});};var handleIncrement=useCallback(function(habit){var habitList=habits.map(function(item){if(item.id===habit.id){return _objectSpread(_objectSpread({},habit),{},{count:habit.count+1});}return item;});setStorage(habitList);},[habits]);var handleDecrement=useCallback(function(habit){var habitList=habits.map(function(item){if(item.id===habit.id){return _objectSpread(_objectSpread({},habit),{},{count:habit.count>0?habit.count-1:0});}return item;});setStorage(habitList);},[habits]);var handleDelete=useCallback(function(habit){//id가 같지 않은 요소들로만 다시 배열을 만들어준다\nvar habitList=habits.filter(function(item){return item.id!==habit.id;});setStorage(habitList);});var onAdd=useCallback(function(name){var habitList=[].concat(_toConsumableArray(habits),[{id:Date.now(),name:name,count:0}]);setStorage(habitList);},[habits]);var handleReset=useCallback(function(){var habitList=habits.map(function(habit){if(habit.count!==0){return _objectSpread(_objectSpread({},habit),{},{count:0});}return habit;});setStorage(habitList);},[habits]);return/*#__PURE__*/_jsxs(React.StrictMode,{children:[/*#__PURE__*/_jsx(Navbar,{totalCount:habits.filter(function(item){return item.count>0;}).length}),/*#__PURE__*/_jsx(Habits,{habit:habits,onIncrement:handleIncrement,onDecrement:handleDecrement,onDelete:handleDelete,onAdd:onAdd,onReset:handleReset})]});};export default App;","map":{"version":3,"sources":["C:/Users/jiyun/Desktop/GitHub/reactPractice/habit-tracker-function/src/app.jsx"],"names":["Habits","Navbar","React","useState","useCallback","App","props","getHabitlist","localStorage","getItem","JSON","parse","habits","setHabits","setStorage","habitList","list","stringify","setItem","handleIncrement","habit","map","item","id","count","handleDecrement","handleDelete","filter","onAdd","name","Date","now","handleReset","length"],"mappings":"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","sourcesContent":["import \"./app.css\";\r\nimport Habits from \"./components/habits\";\r\nimport Navbar from \"./components/navbar\";\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nconst App = (props) => {\r\n\tlet getHabitlist;\r\n\tlocalStorage.getItem(\"habitlist\")\r\n\t\t? (getHabitlist = JSON.parse(localStorage.getItem(\"habitlist\")))\r\n\t\t: (getHabitlist = []);\r\n\r\n\tconst [habits, setHabits] = useState(getHabitlist);\r\n\r\n\tconst setStorage = (habitList) => {\r\n\t\tconst list = JSON.stringify(habitList);\r\n\t\tlocalStorage.setItem(\"habitlist\", list);\r\n\t\tsetHabits((habits) => habitList);\r\n\t};\r\n\r\n\tconst handleIncrement = useCallback(\r\n\t\t(habit) => {\r\n\t\t\tconst habitList = habits.map((item) => {\r\n\t\t\t\tif (item.id === habit.id) {\r\n\t\t\t\t\treturn { ...habit, count: habit.count + 1 };\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\t\t\tsetStorage(habitList);\r\n\t\t},\r\n\t\t[habits]\r\n\t);\r\n\r\n\tconst handleDecrement = useCallback(\r\n\t\t(habit) => {\r\n\t\t\tconst habitList = habits.map((item) => {\r\n\t\t\t\tif (item.id === habit.id) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...habit,\r\n\t\t\t\t\t\tcount: habit.count > 0 ? habit.count - 1 : 0,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\t\t\tsetStorage(habitList);\r\n\t\t},\r\n\t\t[habits]\r\n\t);\r\n\tconst handleDelete = useCallback((habit) => {\r\n\t\t//id가 같지 않은 요소들로만 다시 배열을 만들어준다\r\n\t\tconst habitList = habits.filter((item) => item.id !== habit.id);\r\n\t\tsetStorage(habitList);\r\n\t});\r\n\r\n\tconst onAdd = useCallback(\r\n\t\t(name) => {\r\n\t\t\tconst habitList = [...habits, { id: Date.now(), name, count: 0 }];\r\n\t\t\tsetStorage(habitList);\r\n\t\t},\r\n\t\t[habits]\r\n\t);\r\n\r\n\tconst handleReset = useCallback(() => {\r\n\t\tconst habitList = habits.map((habit) => {\r\n\t\t\tif (habit.count !== 0) {\r\n\t\t\t\treturn { ...habit, count: 0 };\r\n\t\t\t}\r\n\t\t\treturn habit;\r\n\t\t});\r\n\r\n\t\tsetStorage(habitList);\r\n\t}, [habits]);\r\n\r\n\treturn (\r\n\t\t<React.StrictMode>\r\n\t\t\t<Navbar totalCount={habits.filter((item) => item.count > 0).length} />\r\n\t\t\t<Habits\r\n\t\t\t\thabit={habits}\r\n\t\t\t\tonIncrement={handleIncrement}\r\n\t\t\t\tonDecrement={handleDecrement}\r\n\t\t\t\tonDelete={handleDelete}\r\n\t\t\t\tonAdd={onAdd}\r\n\t\t\t\tonReset={handleReset}\r\n\t\t\t/>\r\n\t\t</React.StrictMode>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}